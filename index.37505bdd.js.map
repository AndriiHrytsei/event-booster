{"mappings":"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","sources":["src/js/modals.js","src/js/events.js","src/js/country-select.js","src/js/loader.js","src/js/index.js"],"sourcesContent":["export const modal = document.querySelector(\"#myModal\");\nexport const span = document.querySelector(\".svg-close\");\n\n//! Modal elements\nexport const eventImgHead = document.querySelector(\".event-image-head\")\nexport const eventImgMain = document.querySelector(\".main-event-image\")\nexport const info = document.querySelector(\".info-text\")\nexport const date = document.querySelector(\".date\")\nexport const time = document.querySelector(\".time\")\nexport const location = document.querySelector(\".location\")\nexport const place = document.querySelector(\".place\")\nexport const who = document.querySelector(\".who-name\")\nexport const standartPrice = document.querySelector(\".standart-price\")\nexport const vipPrice = document.querySelector(\".vip-price\")\n\n\n\n\n// span.addEventListener(\"click\", () => {\n//   modal.style.display = \"none\";\n// })\n\n// cardEvents.forEach((cardEvent) => {\n//   cardEvent.addEventListener('click', () => {\n//     modal.style.display = \"block\";\n//   });\n// });\n\n// window.onclick = function(event) {\n//   if (event.target == modal) {\n//     modal.style.display = \"none\";\n//   }\n// }\n","export const eventList = document.querySelector(\".list-cards\")\nexport const eventInput = document.querySelector(\".search-by-s\")\nexport const countryInput = document.querySelector(\".options\")\nexport const searchForm = document.querySelector(\".search-form\")\n\nexport async function fetchEvents(api){\n    try{\n        const response = await fetch(api)\n        const events = await response.json()\n        return events\n    } catch (error){\n        console.log(error.message);\n    }\n}\n\nexport function renderEvents(events) {\n    events.forEach(event => {\n        eventList.insertAdjacentHTML(\"beforeend\", `\n            <li class=\"event\">\n            <div class=\"ramka-event\"></div>\n            <img class=\"event-image\" src=${event[\"images\"][0][\"url\"]}\n                data-name=\"${event[\"name\"]}\"\n                data-eventimghead=\"${event[\"images\"][0][\"url\"]}\"\n                data-eventimgmain=\"${event[\"images\"][2][\"url\"]}\"\n                data-date=\"${event[\"dates\"][\"start\"][\"localDate\"]}\"\n                data-time=\"${event[\"dates\"][\"start\"][\"localTime\"]}\"\n                data-timezone=\"${event[\"dates\"][\"timezone\"]}\"\n                data-city=\"${event[\"_embedded\"][\"venues\"][0][\"city\"][\"name\"]}\"\n                data-country=\"${event[\"_embedded\"][\"venues\"][0][\"country\"][\"name\"]}\"\n                data-place=\"${event[\"_embedded\"][\"venues\"][0][\"name\"]}\"\n                data-who=\"${event[\"name\"]}\"\n                data-info=\"${event[\"info\"]}\"\n            >\n                <h3>${event[\"name\"]}</h3>\n                <h4 >${event[\"dates\"][\"start\"][\"localDate\"]}</h4>\n                <p class = \"event-location\">\n                    ${event[\"_embedded\"][\"venues\"][0][\"name\"]}\n                </p>\n            </li>\n        `)\n        const eventLocations = document.querySelectorAll(\".event-location\")\n        eventLocations.forEach(eventLocation => {\n            if (!event[\"_embedded\"][\"venues\"][0][\"name\"]){\n                eventLocation.textContent = \"Location not given\"\n            }\n        })\n    })\n}\n","export const countrySelect = document.querySelector(\".options\");\nexport const wrapper = document.querySelector(\".wrapper\");\nexport const selectBtn = document.querySelector(\".select-btn\");\nexport const searchInp = document.querySelector(\".search-country\");\nexport const countryList = document.querySelectorAll(\".countryLi\");\n\nexport async function fetchCountries(api){\n    try {\n        const response = await fetch(api);\n        const countries = await response.json();\n        return countries;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport function renderCountries(countries){\n    // const filterCountries = countries.filter(country => country > 15);\n    countries.forEach(country => {\n            countrySelect.insertAdjacentHTML(\"beforeend\", `\n            <li value = \"${country[\"cca2\"]}\" class=\"countryLi\">${country[\"name\"][\"common\"]}</li>\n            `)\n    })\n}\n\n// export function searchInputCountry(data){\n//     let arr = [];\n//     let searchWord = searchInp.value.toLowerCase();\n//     arr = countries.filter(data => {\n//         return data.toLowerCase().startsWith(searchWord);\n//     }).map(data => {\n//         let isSelected = data == selectBtn.firstElementChild.innerText ? \"selected\" : \"\";\n//         return `<li onclick=\"updateName(this)\" class=\"${isSelected}\">${data}</li>`;\n//     }).join(\"\");\n//     options.innerHTML = arr ? arr : `<p style=\"margin-top: 10px; color: #CCCCCC;;\">Sorry. Country not found!</p>`;\n// }\n\n//!------\n\n\n\n//!------\n// countrySelect.addEventListener(\"click\", (event) => {\n//     const countryList = document.querySelectorAll(\".countryLi\");\n//         countryList.forEach((countryEl) => {\n//         if (event.target === countryEl) {\n//             searchInp.value = \"\";\n//             wrapper.classList.remove(\"active\");\n//             selectBtn.classList.toggle(\"active-border\");\n//             selectBtn.firstElementChild.innerText = event.target.innerText;\n//         }\n//         });\n// });\n//!------\n\n// export function searchCountry(countries){\n//     searchInp.addEventListener(\"keyup\", () => {\n    // let searchWord = searchInp.value.toLowerCase();\n    // const array = countries.forEach((countryFilter) => {\n    //     return countryFilter.toLowerCase().startsWith(searchWord);\n    // })\n    // array.forEach(countryFilter => {\n    //     let isSelected;\n    //     if(countryFilter == selectBtn.firstElementChild.innerText){\n    //         isSelected = \"selected\";\n    //     } \n    //     else{\n    //         isSelected = \"\";\n    //     }\n    //     // let isSelected = countryFilter == selectBtn.firstElementChild.innerText ? \"selected\" : \"\";\n    //     return `<li value = \"${countryFilter[\"cca2\"]}\" class=\"countryLi ${isSelected}\">${countryFilter[\"name\"][\"common\"]}</li>`;\n    // })\n    // array.join(\"\");\n        // options.innerHTML = array ? array : `<p style=\"margin-top: 10px; color: #CCCCCC;;\">Sorry. Country not found!</p>`;\n    // });\n    // filterCountries(countries)\n// }\n\n// export function filterCountries(countries){\n//     const array = countries.filter((countryFilter) => {\n//         return countryFilter.toLowerCase().startsWith(searchWord);\n//     }).map(countryFilter => {\n//         let isSelected;\n//         if(countryFilter == selectBtn.firstElementChild.innerText){\n//             isSelected = \"selected\";\n//         } \n//         else{\n//             isSelected = \"\";\n//         }\n//         // let isSelected = countryFilter == selectBtn.firstElementChild.innerText ? \"selected\" : \"\";\n//         return `<li value = \"${countryFilter[\"cca2\"]}\" class=\"countryLi ${isSelected}\">${countryFilter[\"name\"][\"common\"]}</li>`;\n//     }).join(\"\");\n//     return options.innerHTML = array ? array : `<p style=\"margin-top: 10px; color: #CCCCCC;;\">Sorry. Country not found!</p>`;\n// }\n\n\n//!------\n// selectBtn.addEventListener(\"click\", () => {\n//     wrapper.classList.toggle(\"active\");\n//     selectBtn.classList.toggle(\"active-border\");\n// });\n//!------\n\n// const options = document.querySelector(\".options\");\n\n// let countries = [\"Afghanistan\", \"Algeria\", \"Argentina\", \"Australia\", \"Bangladesh\", \"Belgium\", \"Bhutan\",\n//                  \"Brazil\", \"Canada\", \"China\", \"Denmark\", \"Ethiopia\", \"Finland\", \"France\", \"Germany\",\n//                  \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Italy\", \"Japan\", \"Malaysia\",\n//                  \"Maldives\", \"Mexico\", \"Morocco\", \"Nepal\", \"Netherlands\", \"Nigeria\", \"Norway\", \"Pakistan\",\n//                  \"Peru\", \"Russia\", \"Romania\", \"South Africa\", \"Spain\", \"Sri Lanka\", \"Sweden\", \"Switzerland\",\n//                  \"Thailand\", \"Turkey\", \"Uganda\", \"Ukraine\", \"United States\", \"United Kingdom\", \"Vietnam\"];\n\n// function addCountry(selectedCountry) {\n//     options.innerHTML = \"\";\n//     countries.forEach(country => {\n//         let isSelected = country == selectedCountry ? \"selected\" : \"\";\n//         let li = `<li onclick=\"updateName(this)\" class=\"${isSelected}\">${country}</li>`;\n//         options.insertAdjacentHTML(\"beforeend\", li);\n//     });\n// }\n// addCountry();\n\n// function updateName(selectedLi) {\n    // searchInp.value = \"\";\n    // addCountry(selectedLi.innerText);\n    // wrapper.classList.remove(\"active\");\n    // selectBtn.firstElementChild.innerText = selectedLi.innerText;\n    // selectBtn.classList.toggle(\"active-border\");\n// }\n\n// searchInp.addEventListener(\"keyup\", () => {\n//     let arr = [];\n//     let searchWord = searchInp.value.toLowerCase();\n//     arr = countries.filter(data => {\n//         return data.toLowerCase().startsWith(searchWord);\n//     }).map(data => {\n//         let isSelected = data == selectBtn.firstElementChild.innerText ? \"selected\" : \"\";\n//         return `<li onclick=\"updateName(this)\" class=\"${isSelected}\">${data}</li>`;\n//     }).join(\"\");\n//     options.innerHTML = arr ? arr : `<p style=\"margin-top: 10px; color: #CCCCCC;;\">Sorry. Country not found!</p>`;\n// });\n\n// selectBtn.addEventListener(\"click\", () => {\n//     wrapper.classList.toggle(\"active\");\n//     selectBtn.classList.toggle(\"active-border\");\n// });","export const mask = document.querySelector('.mask');\n","import * as modalsJS from \"./modals.js\";\nimport * as eventsJS from \"./events.js\";\nimport * as countrySearhJS from \"./country-select.js\";\nimport * as loaderJS from \"./loader.js\";\n\n//!------------- country select ---------------\ncountrySearhJS\n  .fetchCountries(\"https://restcountries.com/v3.1/all\")\n  .then((data) => {\n    countrySearhJS.renderCountries(data);\n    // countrySearhJS.searchCountry(data);\n});\n\ncountrySearhJS.selectBtn.addEventListener(\"click\", () => {\n  countrySearhJS.wrapper.classList.toggle(\"active\");\n  countrySearhJS.selectBtn.classList.toggle(\"active-border\");\n});\n\ncountrySearhJS.countrySelect.addEventListener(\"click\", (event) => {\n  const countryList = document.querySelectorAll(\".countryLi\");\n      countryList.forEach((countryEl) => {\n      if (event.target === countryEl) {\n          // countrySearhJS.searchInp.value = \"\";\n          countrySearhJS.wrapper.classList.remove(\"active\");\n          countrySearhJS.selectBtn.classList.toggle(\"active-border\");\n          countrySearhJS.selectBtn.firstElementChild.innerText = event.target.innerText;\n          countrySearhJS.selectBtn.firstElementChild.setAttribute(\"value\", `${event.target.getAttribute(\"value\")}`)\n      }\n      });\n});\n\n// //!------\n// const wrapper = document.querySelector(\".wrapper\");\n// const selectBtn = document.querySelector(\".select-btn\");\n// const searchInp = document.querySelector(\".search-country\");\n// const options = document.querySelector(\".options\");\n\n// let countries = [\"Afghanistan\", \"Algeria\", \"Argentina\", \"Australia\", \"Bangladesh\", \"Belgium\", \"Bhutan\",\n//                  \"Brazil\", \"Canada\", \"China\", \"Denmark\", \"Ethiopia\", \"Finland\", \"France\", \"Germany\",\n//                  \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran\", \"Italy\", \"Japan\", \"Malaysia\",\n//                  \"Maldives\", \"Mexico\", \"Morocco\", \"Nepal\", \"Netherlands\", \"Nigeria\", \"Norway\", \"Pakistan\",\n//                  \"Peru\", \"Russia\", \"Romania\", \"South Africa\", \"Spain\", \"Sri Lanka\", \"Sweden\", \"Switzerland\",\n//                  \"Thailand\", \"Turkey\", \"Uganda\", \"Ukraine\", \"United States\", \"United Kingdom\", \"Vietnam\"];\n\n// function addCountry(selectedCountry) {\n//     options.innerHTML = \"\";\n//     countries.forEach(country => {\n//         let isSelected = country == selectedCountry ? \"selected\" : \"\";\n//         let li = `<li onclick=\"updateName(this)\" class=\"${isSelected}\">${country}</li>`;\n//         options.insertAdjacentHTML(\"beforeend\", li);\n//     });\n// }\n// addCountry();\n\n// function updateName(selectedLi) {\n//     searchInp.value = \"\";\n//     addCountry(selectedLi.innerText);\n//     wrapper.classList.remove(\"active\");\n//     selectBtn.firstElementChild.innerText = selectedLi.innerText;\n//     selectBtn.classList.toggle(\"active-border\");\n// }\n\n// searchInp.addEventListener(\"keyup\", () => {\n//     let arr = [];\n//     let searchWord = searchInp.value.toLowerCase();\n//     arr = countries.filter(data => {\n//         return data.toLowerCase().startsWith(searchWord);\n//     }).map(data => {\n//         let isSelected = data == selectBtn.firstElementChild.innerText ? \"selected\" : \"\";\n//         return `<li onclick=\"updateName(this)\" class=\"${isSelected}\">${data}</li>`;\n//     }).join(\"\");\n//     options.innerHTML = arr ? arr : `<p style=\"margin-top: 10px; color: #CCCCCC;;\">Sorry. Country not found!</p>`;\n// });\n\n// selectBtn.addEventListener(\"click\", () => {\n//     wrapper.classList.toggle(\"active\");\n//     selectBtn.classList.toggle(\"active-border\");\n// });\n\n// options.forEach(country => {\n//     country.addEventListener(\"click\", () => {\n//         wrapper.classList.toggle(\"active\");\n//         selectBtn.classList.toggle(\"border\");\n//     })\n// });\n//!------------- events ---------------\n// eventsJS.searchForm.addEventListener(\"submit\", (e) => {\n//   e.preventDefault();\n//   eventsJS.eventList.replaceChildren(\"\");\n//   eventsJS\n//     .fetchEvents(\n//       `https://app.ticketmaster.com/discovery/v2/events.json?apikey=Thqn5txrZvBNrP2vPhyOGtn3h4ymZ92S&keyword=${eventsJS.eventInput.value}&size=20&countryCode=${countrySelcetJS.countrySelect.value}`\n//     )\n//     .then((data) => {\n//       eventsJS.renderEvents(data[\"_embedded\"][\"events\"]);\n//       eventsJS.eventList.addEventListener(\"click\", (e) => {\n//         const cards = document.querySelectorAll(\".event-image\");\n//         cards.forEach((card) => {\n//           if (e.target === card) {\n//             modalsJS.modal.style.display = \"flex\";\n//             modalsJS.eventImgHead.src = e.target.dataset.eventimghead;\n//             modalsJS.eventImgMain.src = e.target.dataset.eventimgmain;\n//             modalsJS.date.textContent = e.target.dataset.date;\n//             modalsJS.time.textContent = `${e.target.dataset.time} (${e.target.dataset.timezone})`;\n//             modalsJS.location.textContent = `${e.target.dataset.city}, ${e.target.dataset.country}`;\n//             modalsJS.place.textContent = e.target.dataset.place;\n//             modalsJS.who.textContent = e.target.dataset.name;\n//           }\n//         });\n//       });\n\n//       modalsJS.span.addEventListener(\"click\", () => {\n//         modalsJS.modal.style.display = \"none\";\n//       });\n\n//       window.onclick = function (event) {\n//         if (event.target == modalsJS.modal) {\n//           modalsJS.modal.style.display = \"none\";\n//         }\n//       };\n//     });\n// });\n\n//!------------- pagination ---------------\nconst paginationBox = document.querySelector('.pagination')//****ДОБАВИТИ СТИЛІ */\neventsJS.searchForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  eventsJS.eventList.replaceChildren(\"\");\n  paginationBox.replaceChildren(\"\")\n\n  eventsJS\n    .fetchEvents(\n      `https://app.ticketmaster.com/discovery/v2/events.json?apikey=Thqn5txrZvBNrP2vPhyOGtn3h4ymZ92S&keyword=${eventsJS.eventInput.value}&size=30&countryCode=${countrySearhJS.selectBtn.firstElementChild.getAttribute(\"value\")}`\n    )\n    .then((data) => {\n\n      const events = data[\"_embedded\"][\"events\"];\n      const eventsPerPage = 20; // Кількість подій на сторінці\n      const totalPages = Math.ceil(events.length / eventsPerPage); // Загальна кількість сторінок\n      let currentPage = 1; // Початкова сторінка\n      \n      // Функція для рендерингу подій на поточній сторінці\n      function renderPage(page) {\n        eventsJS.eventList.replaceChildren(\"\");\n        const startIndex = (page - 1) * eventsPerPage;\n        const endIndex = page * eventsPerPage;\n        const eventsToRender = events.slice(startIndex, endIndex);\n        eventsJS.renderEvents(eventsToRender);\n      }\n\n      // Функція для відображення посторінкової навігації\n      function renderPagination() {\n        // const paginationContainer = document.createElement(\"div\");\n        // paginationContainer.classList.add(\"pagination\");\n        // paginationContainer.innerHTML = \"\";\n\n        // Створення кнопок для кожної сторінки\n        for (let i = 1; i <= totalPages; i += 1) {\n          const button = document.createElement(\"button\");\n          button.textContent = i;\n          button.addEventListener(\"click\", () => {\n            currentPage = i;\n            renderPage(currentPage);\n          });\n          paginationBox.appendChild(button);\n          button.classList.add(\"pag-but\")\n        }\n        // Додавання контейнера пагінації до сторінки\n        \n\n        // eventsJS.eventList.parentNode.appendChild(paginationBox);\n      }\n\n      renderPage(currentPage);\n      renderPagination();\n\n  \n//!------------- modals ---------------\neventsJS.eventList.addEventListener(\"click\", (e) => {\n  const cards = document.querySelectorAll(\".event-image\");\n    cards.forEach((card) => {\n      if (e.target === card) {\n        modalsJS.modal.style.display = \"flex\";\n          modalsJS.eventImgHead.src = e.target.dataset.eventimghead;\n          modalsJS.eventImgMain.src = e.target.dataset.eventimgmain;\n          modalsJS.date.textContent = e.target.dataset.date;\n          modalsJS.time.textContent = `${e.target.dataset.time} (${e.target.dataset.timezone})`;\n          modalsJS.location.textContent = `${e.target.dataset.city}, ${e.target.dataset.country}`;\n          modalsJS.place.textContent = e.target.dataset.place;\n          modalsJS.who.textContent = e.target.dataset.name;\n          if (e.target.dataset.info === \"undefined\"){\n            modalsJS.info.textContent = \"No info available\"\n          } else {\n            modalsJS.info.textContent = e.target.dataset.info\n          }\n          if (modalsJS.place.textContent === \"undefined\"){\n            modalsJS.place.textContent = \"Location not given\"\n          } else {\n            modalsJS.place.textContent = e.target.dataset.place\n          }\n        }\n      });\n    });\n    modalsJS.span.addEventListener(\"click\", () => {\n      modalsJS.modal.style.display = \"none\";\n    });\n\n    window.onclick = function (event) {\n      if (event.target == modalsJS.modal) {\n        modalsJS.modal.style.display = \"none\";\n      }\n    };\n  });\n});\n\n//!------------- loader ---------------\nwindow.addEventListener(\"load\", () => {\n  loaderJS.mask.classList.add(\"hide\");\n  setTimeout(() => {\n    loaderJS.mask.remove();\n  }, 1000);\n});"],"names":["$1d29fe34b84d1454$export$96e4b36520c26a2c","document","querySelector","$1d29fe34b84d1454$export$afc1bfabebaf28a2","$1d29fe34b84d1454$export$f82f0beffcce522a","$1d29fe34b84d1454$export$b72d1bca17cf9cc0","$1d29fe34b84d1454$export$a80b3bd66acc52ff","$1d29fe34b84d1454$export$324d90190a8b822a","$1d29fe34b84d1454$export$2da9be4cfdb689b1","$1d29fe34b84d1454$export$17b07c660794dc13","$1d29fe34b84d1454$export$d4d5bf0e1681e4da","$1d29fe34b84d1454$export$eee6f1a9b583e1e7","$de5d02778809f5ef$export$488bd29c69d24b6f","$de5d02778809f5ef$export$b9db0cf1c4a7a3e","$de5d02778809f5ef$export$86cd6ee53f74299b","$5976548c22ba4f86$export$a9bf4c2a13f1ac95","$5976548c22ba4f86$export$cc74dcc53cfce4eb","$5976548c22ba4f86$export$587f56b0c24c5b1b","querySelectorAll","$0e5a78bda799a799$export$d99f0801a68bbcf1","async","api","response","fetch","json","error","console","log","message","$5976548c22ba4f86$export$1d1c4391ecac81e8","then","data","forEach","country","insertAdjacentHTML","addEventListener","classList","toggle","event","countryEl","target","remove","firstElementChild","innerText","setAttribute","getAttribute","$8f6a480bb40b134f$var$paginationBox","e","preventDefault","replaceChildren","$de5d02778809f5ef$export$2f6ec72f51ef1792","value","events","eventsPerPage","totalPages","Math","ceil","length","currentPage","renderPage","page","startIndex","endIndex","eventLocation","textContent","$de5d02778809f5ef$export$ff0eb5149c4c561a","slice","i","button","createElement","appendChild","add","renderPagination","card","style","display","src","dataset","eventimghead","eventimgmain","date","time","timezone","city","place","name","info","window","onclick","setTimeout"],"version":3,"file":"index.37505bdd.js.map"}